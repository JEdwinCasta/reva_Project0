[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\EDWINC~1\AppData\Local\Temp\idea7.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\EDWINC~1\AppData\Local\Temp\idea7.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Amazon.com Inc. Java 1.8.0_332)
[debug]       Load.loadUnit: plugins took 106.4978ms
[debug]       Load.loadUnit: defsScala took 0.4923ms
[debug] [Loading] Scanning directory C:\Users\Edwin Castano\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Edwin Castano\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 21.8337 ms
[debug]           Load.resolveProject(global-plugins) took 52.8828ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Edwin Castano\.sbt\1.0\plugins, plugins: List(<none>))) took 105.4866ms
[debug] [Loading] Done in C:\Users\Edwin Castano\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 130.1389ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.5267ms
[debug]     Load.loadUnit(file:/C:/Users/Edwin%20Castano/.sbt/1.0/plugins/, ...) took 247.3063ms
[debug]   Load.apply: load took 477.2015ms
[debug]   Load.apply: resolveProjects took 6.8821ms
[debug]   Load.apply: finalTransforms took 58.1703ms
[debug]   Load.apply: config.delegates took 8.931ms
[debug]   Load.apply: Def.make(settings)... took 466.4048ms
[debug]   Load.apply: structureIndex took 92.1554ms
[debug]   Load.apply: mkStreams took 1.4163ms
[info] loading global plugins from C:\Users\Edwin Castano\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5907.3042ms
[debug]           Load.loadUnit: plugins took 30.0813ms
[debug]           Load.loadUnit: defsScala took 0.0036ms
[debug] [Loading] Scanning directory C:\Users\Edwin Castano\Desktop\Git Folder\revature\Project_01\project
[debug]             Load.loadUnit: mkEval took 9.0517ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Edwin Castano\Desktop\Git Folder\revature\Project_01\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.1483 ms
[info] loading settings for project project_01-build from idea7.sbt ...
[debug]               Load.resolveProject(project_01-build) took 8.7207ms
[debug]             Load.loadTransitive: finalizeProject(Project(id project_01-build, base: C:\Users\Edwin Castano\Desktop\Git Folder\revature\Project_01\project, plugins: List(<none>))) took 11.5827ms
[debug] [Loading] Done in C:\Users\Edwin Castano\Desktop\Git Folder\revature\Project_01\project, returning: (project_01-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2614.1767ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.2972ms
[debug]         Load.loadUnit(file:/C:/Users/Edwin%20Castano/Desktop/Git%20Folder/revature/Project_01/project/, ...) took 2649.5545ms
[debug]       Load.apply: load took 2650.8978ms
[debug]       Load.apply: resolveProjects took 0.1427ms
[debug]       Load.apply: finalTransforms took 9.1292ms
[debug]       Load.apply: config.delegates took 0.633ms
[debug]       Load.apply: Def.make(settings)... took 113.2089ms
[debug]       Load.apply: structureIndex took 25.3382ms
[debug]       Load.apply: mkStreams took 0.0022ms
[info] loading project definition from C:\Users\Edwin Castano\Desktop\Git Folder\revature\Project_01\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 4786.519ms
[debug]     Load.loadUnit: defsScala took 0.0036ms
[debug] [Loading] Scanning directory C:\Users\Edwin Castano\Desktop\Git Folder\revature\Project_01
[debug]       Load.loadUnit: mkEval took 0.3023ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.1219 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 35.2014ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Edwin Castano\Desktop\Git Folder\revature\Project_01, plugins: List(<none>))) took 39.3802ms
[debug] [Loading] Done in C:\Users\Edwin Castano\Desktop\Git Folder\revature\Project_01, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1750.3573ms
[debug]     Load.loadUnit: cleanEvalClasses took 19.034ms
[debug]   Load.loadUnit(file:/C:/Users/Edwin%20Castano/Desktop/Git%20Folder/revature/Project_01/, ...) took 6556.5959ms
[debug] Load.apply: load took 6558.0849ms
[debug] Load.apply: resolveProjects took 0.1158ms
[debug] Load.apply: finalTransforms took 33.9313ms
[debug] Load.apply: config.delegates took 0.292ms
[debug] Load.apply: Def.make(settings)... took 156.4798ms
[debug] Load.apply: structureIndex took 25.4233ms
[debug] Load.apply: mkStreams took 0.0025ms
[info] set current project to Project_01 (in build file:/C:/Users/Edwin%20Castano/Desktop/Git%20Folder/revature/Project_01/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49860 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49860, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Project_01 (in build file:/C:/Users/Edwin%20Castano/Desktop/Git%20Folder/revature/Project_01/)
[debug] > Exec(idea-shell, None, None)
