[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\EDWINC~1\AppData\Local\Temp\idea5.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\EDWINC~1\AppData\Local\Temp\idea5.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Amazon.com Inc. Java 1.8.0_332)
[debug]       Load.loadUnit: plugins took 89.2181ms
[debug]       Load.loadUnit: defsScala took 0.3379ms
[debug] [Loading] Scanning directory C:\Users\Edwin Castano\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Edwin Castano\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 18.4764 ms
[debug]           Load.resolveProject(global-plugins) took 51.2304ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Edwin Castano\.sbt\1.0\plugins, plugins: List(<none>))) took 96.5463ms
[debug] [Loading] Done in C:\Users\Edwin Castano\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 121.1694ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3041ms
[debug]     Load.loadUnit(file:/C:/Users/Edwin%20Castano/.sbt/1.0/plugins/, ...) took 218.9906ms
[debug]   Load.apply: load took 422.1169ms
[debug]   Load.apply: resolveProjects took 6.9187ms
[debug]   Load.apply: finalTransforms took 53.7238ms
[debug]   Load.apply: config.delegates took 8.2538ms
[debug]   Load.apply: Def.make(settings)... took 449.8417ms
[debug]   Load.apply: structureIndex took 104.7628ms
[debug]   Load.apply: mkStreams took 1.6994ms
[info] loading global plugins from C:\Users\Edwin Castano\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2658.883ms
[debug]           Load.loadUnit: plugins took 36.7924ms
[debug]           Load.loadUnit: defsScala took 0.0041ms
[debug] [Loading] Scanning directory C:\Users\Edwin Castano\Desktop\Git Folder\revature\Project_01\project
[debug]             Load.loadUnit: mkEval took 8.5021ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Edwin Castano\Desktop\Git Folder\revature\Project_01\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.066 ms
[info] loading settings for project project_01-build from idea5.sbt ...
[debug]               Load.resolveProject(project_01-build) took 4.5845ms
[debug]             Load.loadTransitive: finalizeProject(Project(id project_01-build, base: C:\Users\Edwin Castano\Desktop\Git Folder\revature\Project_01\project, plugins: List(<none>))) took 7.2276ms
[debug] [Loading] Done in C:\Users\Edwin Castano\Desktop\Git Folder\revature\Project_01\project, returning: (project_01-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 182.5076ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.3115ms
[debug]         Load.loadUnit(file:/C:/Users/Edwin%20Castano/Desktop/Git%20Folder/revature/Project_01/project/, ...) took 224.7423ms
[debug]       Load.apply: load took 226.199ms
[debug]       Load.apply: resolveProjects took 0.1384ms
[debug]       Load.apply: finalTransforms took 7.9365ms
[debug]       Load.apply: config.delegates took 0.2986ms
[debug]       Load.apply: Def.make(settings)... took 93.055ms
[debug]       Load.apply: structureIndex took 30.0475ms
[debug]       Load.apply: mkStreams took 0.0026ms
[info] loading project definition from C:\Users\Edwin Castano\Desktop\Git Folder\revature\Project_01\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 723.0197ms
[debug]     Load.loadUnit: defsScala took 0.0041ms
[debug] [Loading] Scanning directory C:\Users\Edwin Castano\Desktop\Git Folder\revature\Project_01
[debug]       Load.loadUnit: mkEval took 0.2919ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.2761 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 26.6252ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Edwin Castano\Desktop\Git Folder\revature\Project_01, plugins: List(<none>))) took 30.7006ms
[debug] [Loading] Done in C:\Users\Edwin Castano\Desktop\Git Folder\revature\Project_01, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 136.2838ms
[debug]     Load.loadUnit: cleanEvalClasses took 4.118ms
[debug]   Load.loadUnit(file:/C:/Users/Edwin%20Castano/Desktop/Git%20Folder/revature/Project_01/, ...) took 864.0162ms
[debug] Load.apply: load took 865.5026ms
[debug] Load.apply: resolveProjects took 0.0997ms
[debug] Load.apply: finalTransforms took 22.2748ms
[debug] Load.apply: config.delegates took 0.3167ms
[debug] Load.apply: Def.make(settings)... took 76.2777ms
[debug] Load.apply: structureIndex took 19.9608ms
[debug] Load.apply: mkStreams took 0.0025ms
[info] set current project to Project_01 (in build file:/C:/Users/Edwin%20Castano/Desktop/Git%20Folder/revature/Project_01/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49860 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49860, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Project_01 (in build file:/C:/Users/Edwin%20Castano/Desktop/Git%20Folder/revature/Project_01/)
[debug] > Exec(idea-shell, None, None)
